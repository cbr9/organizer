name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Test on Ubuntu, Windows, and macOS

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust (Nightly)
      uses: dtolnay/rust-toolchain@nightly

      with:
        rust-version: nightly  # Use the nightly version of Rust

    - name: Install Windows GNU toolchain (only on Windows)
      if: runner.os == 'Windows'
      run: rustup target add x86_64-pc-windows-gnu  # Add the Windows GNU toolchain

    - name: Install cargo-tarpaulin for code coverage
      run: cargo install cargo-tarpaulin

    - name: Build (Use windows-gnu target on Windows)
      run: |
        if [ $RUNNER_OS = "Windows" ]; then
          cargo build --target x86_64-pc-windows-gnu --verbose  # Build for Windows GNU on Windows
        else
          cargo build --verbose  # Default build on other OSs
        fi

    - name: Run tests
      run: |
        if [ $RUNNER_OS = "Windows" ]; then
          cargo test --target x86_64-pc-windows-gnu --workspace --verbose  # Test for Windows GNU on Windows
        else
          cargo test --workspace --verbose  # Default tests on other OSs
        fi

    - name: Generate code coverage
      run: cargo tarpaulin --workspace --all-features --ci --coverage-dir target/coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: target/coverage/lcov-report/index.html  # Path to the coverage report
