language: rust

rust:
  - stable

os:
  - linux
  - osx
  - windows

script:
  cargo build --verbose &&
  cargo test --all --verbose

branches:
  only:
    - staging # bors r+
    - trying # bors try
    - master
    - alpha-2.0

cache: cargo
sudo: required # travis-ci/travis-ci#9061

matrix:
  fast_finish: true
  include:
      - before_script:
          - rustup component add rustfmt-preview
          - rustup component add clippy-preview
        script:
          - cargo fmt -- --write-mode=diff
          - cargo clippy -- -D clippy

addons: # required for kcov
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

after_success: |
  cargo test --all --no-run &&
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  rm target/debug/deps/organize-*;
  rm target/debug/deps/organize_core-*;
  for file in target/debug/deps/organize-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  for file in target/debug/deps/organize_core-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"